"use client";

import Link from 'next/link';
import React, { useState, useEffect, useCallback } from 'react';

// 定義蛇節點的型別
interface SnakeSegment {
  x: number;
  y: number;
}

// 定義遊戲板的尺寸
const BOARD_SIZE = 20;

export default function Game1Page() {
  const [snake, setSnake] = useState<SnakeSegment[]>([{ x: 10, y: 10 }]);
  const [food, setFood] = useState<SnakeSegment>({ x: 5, y: 5 });
  const [direction, setDirection] = useState<'UP' | 'DOWN' | 'LEFT' | 'RIGHT'>('RIGHT');
  const [score, setScore] = useState(0);

  // 生成隨機食物位置
  const generateFood = useCallback((currentSnake: SnakeSegment[]) => {
    //let newFood;
    let newFood: SnakeSegment; // 在這裡指定型別 __gemini建議
    do {
      newFood = {
        x: Math.floor(Math.random() * BOARD_SIZE),
        y: Math.floor(Math.random() * BOARD_SIZE),
      };
    } while (currentSnake.some(segment => segment.x === newFood.x && segment.y === newFood.y));
    return newFood;
  }, []);

  // 遊戲邏輯（這部分可能需要你自行填寫完整的貪吃蛇邏輯）
  useEffect(() => {
    // 遊戲循環、按鍵處理等
  }, [snake, food, direction, generateFood]);

  return (
    <main style={{ padding: '2rem', textAlign: 'center' }}>
      <h1>遊戲 1：貪吃蛇</h1>
      <p>分數: {score}</p>
      {/* 遊戲畫面 */}
      <div style={{ display: 'grid', gridTemplateColumns: `repeat(${BOARD_SIZE}, 20px)`, border: '1px solid black', margin: '20px auto' }}>
        {Array.from({ length: BOARD_SIZE * BOARD_SIZE }).map((_, index) => {
          const x = index % BOARD_SIZE;
          const y = Math.floor(index / BOARD_SIZE);
          const isSnake = snake.some(segment => segment.x === x && segment.y === y);
          const isFood = food.x === x && food.y === y;
          return (
            <div
              key={index}
              style={{
                width: '20px',
                height: '20px',
                backgroundColor: isSnake ? 'green' : (isFood ? 'red' : 'white'),
                border: '1px solid #eee',
              }}
            />
          );
        })}
      </div>
      <Link href="/">
        <button style={{ padding: '0.75rem 1.5rem', cursor: 'pointer', marginTop: '1rem' }}>
          返回首頁
        </button>
      </Link>
    </main>
  );
}